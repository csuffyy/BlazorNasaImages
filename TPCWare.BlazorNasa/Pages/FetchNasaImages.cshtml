@page "/fetchimages"
@inject HttpClient Http
@using Microsoft.AspNetCore.Blazor.Browser.Interop

<h1>Nasa images</h1>

@if (nasaImageInfoList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (cardView)
    {
        <ImageCards NasaImageInfoList="@nasaImageInfoList" />
    }
    else
    {
        <ImageList NasaImageInfoList="@nasaImageInfoList" />
    }

    <div class="pt-4">
        <button onclick="@SwitchView">@(cardView ? "Switch to List" : "Switch to Card")</button>
        <button onclick="@ShowHideJson">@(String.IsNullOrWhiteSpace(visibleJson) ? "Show" : "Hide") Json</button>
    </div>

    <p class="pt-4">
        @visibleJson
    </p>
}

@functions {

    // Beware that this anonymous key has big usage restrictions,
    // please get your free apiKey at https://api.nasa.gov/index.html#apply-for-an-api-key
    // and use it to replace the "DEMO_KEY" apiKey value.
    string apiKey = "DEMO_KEY";

    int maxNumOfItems = 5;

    NasaImageInfo[] nasaImageInfoList;
    string jsonText;
    string visibleJson;
    bool cardView = true;

    protected override async Task OnInitAsync()
    {
        try
        {
            Http.BaseAddress = new Uri("https://api.nasa.gov");
            var httpResponse = await Http.GetAsync($"/planetary/apod?api_key={apiKey}&count={maxNumOfItems}");
            jsonText = await httpResponse.Content.ReadAsStringAsync();
            nasaImageInfoList = JsonUtil.Deserialize<NasaImageInfo[]>(jsonText);

            // throw new Exception("Errore nel fetch dell'immagine.");
        }
        catch (Exception ex)
        {
            RegisteredFunction.Invoke<bool>("consoleLog", ex);
        }
    }

    protected void ShowHideJson()
    {
        visibleJson = String.IsNullOrWhiteSpace(visibleJson) ? jsonText : String.Empty;
    }

    protected void SwitchView()
    {
        cardView = !cardView;
    }

}


